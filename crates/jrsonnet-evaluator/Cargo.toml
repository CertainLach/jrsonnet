[package]
name = "jrsonnet-evaluator"
description = "jsonnet interpreter"
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true

[lints]
workspace = true

[features]
default = ["explaining-traces"]
# Rustc-like trace visualization
explaining-traces = ["annotate-snippets", "hi-doc"]
# Allows library authors to throw custom errors
anyhow-error = ["anyhow"]
# Adds ability to build import closure in async
async-import = []

# Allows to preserve field order in objects
exp-preserve-order = []
# Implements field destructuring
exp-destruct = ["jrsonnet-parser/exp-destruct"]
# Iteration over objects yields [key, value] elements
exp-object-iteration = []
# Bigint type
exp-bigint = ["num-bigint", "jrsonnet-types/exp-bigint"]
# obj?.field, obj?.['field']
exp-null-coaelse = ["jrsonnet-parser/exp-null-coaelse"]

# Improves performance, and implements some useful things using nightly-only features
nightly = ["hashbrown/nightly"]

[dependencies]
jrsonnet-interner.workspace = true
jrsonnet-parser.workspace = true
jrsonnet-types.workspace = true
jrsonnet-macros.workspace = true
jrsonnet-gcmodule.workspace = true

pathdiff.workspace = true
hashbrown.workspace = true
static_assertions.workspace = true

rustc-hash.workspace = true

thiserror.workspace = true
# Friendly errors
strsim.workspace = true

serde.workspace = true

anyhow = { workspace = true, optional = true }
# Explaining traces
annotate-snippets = { workspace = true, optional = true }
# Better explaining traces
hi-doc = { workspace = true, optional = true }
# Bigint
num-bigint = { workspace = true, features = ["serde"], optional = true }
derivative.workspace = true
